$date
	Sun Sep 15 19:54:44 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module arraySortCheck_control_test $end
$var wire 1 ! sorted $end
$var wire 1 " select_index $end
$var wire 1 # load_input $end
$var wire 1 $ load_index $end
$var wire 1 % inversion_found $end
$var wire 1 & end_of_array $end
$var wire 1 ' done $end
$var reg 5 ( array [4:0] $end
$var reg 1 ) clock $end
$var reg 1 * go $end
$var reg 5 + length [4:0] $end
$var reg 1 , reset $end
$var integer 32 - i [31:0] $end
$scope module circuit $end
$var wire 5 . array [4:0] $end
$var wire 1 ) clk $end
$var wire 1 & end_of_array $end
$var wire 1 % inversion_found $end
$var wire 5 / length [4:0] $end
$var wire 1 , reset $end
$var wire 1 0 zero_length_case $end
$var wire 1 " select_index $end
$var wire 1 # load_input $end
$var wire 1 $ load_index $end
$var wire 5 1 length_minus_1 [4:0] $end
$var wire 32 2 index_alu_in [31:0] $end
$var wire 32 3 b [31:0] $end
$var wire 32 4 array_plus_index_plus_1 [31:0] $end
$var wire 32 5 array_plus_index [31:0] $end
$var wire 32 6 array_alu_in [31:0] $end
$var wire 1 7 a_ne_b_1 $end
$var wire 1 8 a_lt_b_2 $end
$var wire 1 9 a_lt_b_1 $end
$var wire 32 : a [31:0] $end
$var reg 5 ; array_reg [4:0] $end
$var reg 5 < index_reg [4:0] $end
$var reg 5 = length_reg [4:0] $end
$scope module compareElements $end
$var wire 1 7 ne $end
$var wire 1 9 lt $end
$var wire 32 > B [31:0] $end
$var wire 32 ? A [31:0] $end
$upscope $end
$scope module comparelength $end
$var wire 5 @ A [4:0] $end
$var wire 5 A B [4:0] $end
$var wire 1 B ne $end
$var wire 1 8 lt $end
$upscope $end
$scope module rf $end
$var wire 1 ) clock $end
$var wire 32 C internal_rdData [31:0] $end
$var wire 32 D rdData [31:0] $end
$var wire 5 E rdNum [4:0] $end
$var wire 1 F rdWriteEnable $end
$var wire 1 , reset $end
$var wire 32 G rsData [31:0] $end
$var wire 5 H rsNum [4:0] $end
$var wire 32 I rtData [31:0] $end
$var wire 5 J rtNum [4:0] $end
$var integer 32 K i [31:0] $end
$upscope $end
$upscope $end
$scope module control $end
$var wire 1 ) clock $end
$var wire 1 ' done $end
$var wire 1 & end_of_array $end
$var wire 1 * go $end
$var wire 1 % inversion_found $end
$var wire 1 $ load_index $end
$var wire 1 # load_input $end
$var wire 1 , reset $end
$var wire 1 L sChecking_next $end
$var wire 1 M sDoNothing_next $end
$var wire 1 N sDoneNonSort_next $end
$var wire 1 O sDoneSort_next $end
$var wire 1 P sGarbage_next $end
$var wire 1 Q sReadyCheck_next $end
$var wire 1 R sStart_next $end
$var wire 1 " select_index $end
$var wire 1 ! sorted $end
$var wire 1 S sStart $end
$var wire 1 T sReadyCheck $end
$var wire 1 U sGarbage $end
$var wire 1 V sDoneSort $end
$var wire 1 W sDoneNonSort $end
$var wire 1 X sDoNothing $end
$var wire 1 Y sChecking $end
$scope module dfCheck $end
$var wire 1 ) clk $end
$var wire 1 L d $end
$var wire 1 Z enable $end
$var wire 1 [ reset $end
$var reg 1 Y q $end
$upscope $end
$scope module dfDoNothing $end
$var wire 1 ) clk $end
$var wire 1 M d $end
$var wire 1 \ enable $end
$var wire 1 ] reset $end
$var reg 1 X q $end
$upscope $end
$scope module dfDoneNonSort $end
$var wire 1 ) clk $end
$var wire 1 N d $end
$var wire 1 ^ enable $end
$var wire 1 _ reset $end
$var reg 1 W q $end
$upscope $end
$scope module dfDoneSort $end
$var wire 1 ) clk $end
$var wire 1 O d $end
$var wire 1 ` enable $end
$var wire 1 a reset $end
$var reg 1 V q $end
$upscope $end
$scope module dfGarbage $end
$var wire 1 ) clk $end
$var wire 1 P d $end
$var wire 1 b enable $end
$var wire 1 c reset $end
$var reg 1 U q $end
$upscope $end
$scope module dfReadyCheck $end
$var wire 1 ) clk $end
$var wire 1 Q d $end
$var wire 1 d enable $end
$var wire 1 e reset $end
$var reg 1 T q $end
$upscope $end
$scope module dfStart $end
$var wire 1 ) clk $end
$var wire 1 R d $end
$var wire 1 f enable $end
$var wire 1 g reset $end
$var reg 1 S q $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0g
1f
0e
1d
0c
1b
0a
1`
0_
1^
0]
1\
0[
1Z
xY
xX
xW
xV
xU
xT
xS
zR
0Q
1P
0O
0N
0M
0L
b100000 K
bx J
bx I
bx H
bx G
zF
bz E
bz D
bx C
xB
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
x9
x8
x7
b0xxxxx 6
bx 5
bx 4
bx 3
b0xxxxx 2
bx 1
x0
bx /
bx .
bx -
1,
bx +
0*
0)
bx (
0'
x&
x%
0$
0#
0"
0!
$end
#1
b1 J
b0 H
1&
18
1B
b1 4
b0 5
b0 2
b0 <
b0 @
10
b11111 1
b11111 A
b0 =
b0 6
b0 ;
1U
zS
0X
0Y
0T
0V
0W
1)
bz C
#2
0%
07
09
b0 3
b0 >
b0 I
b0 :
b0 ?
b0 G
0)
b100000 -
0,
#3
17
19
b1 3
b1 >
b1 I
1)
#4
0P
1Q
0)
1*
b101 +
b101 /
b1011 (
b1011 .
#5
1$
1#
0U
1T
1)
#6
0)
#7
0&
b1100 J
b1011 H
00
b100 1
b100 A
b101 =
b1100 4
b1011 5
b1011 6
b1011 ;
1)
#8
b1100 3
b1100 >
b1100 I
19
b1011 :
b1011 ?
b1011 G
0)
#9
1)
#10
0)
#11
1)
#12
0)
#13
1)
#14
1L
0Q
0)
0*
#15
0L
1"
1M
0#
0T
1Y
1)
#16
0)
#17
1M
b1101 J
b1100 H
b1101 4
b1100 5
b1 2
b1 <
b1 @
1X
0Y
1)
#18
b1101 3
b1101 >
b1101 I
17
19
b1100 :
b1100 ?
b1100 G
0)
#19
b1110 J
b1101 H
b1110 4
b1101 5
b10 2
b10 <
b10 @
1)
#20
b1110 3
b1110 >
b1110 I
17
19
b1101 :
b1101 ?
b1101 G
0)
#21
b1111 J
b1110 H
b1111 4
b1110 5
b11 2
b11 <
b11 @
1)
#22
b1111 3
b1111 >
b1111 I
17
19
b1110 :
b1110 ?
b1110 G
0)
#23
0M
1O
1&
b10000 J
b1111 H
08
0B
b10000 4
b1111 5
b100 2
b100 <
b100 @
1)
#24
b10000 3
b10000 >
b10000 I
17
19
b1111 :
b1111 ?
b1111 G
0)
#25
0"
0$
1'
1!
b10001 J
b10000 H
1B
b10001 4
b10000 5
b101 2
b101 <
b101 @
0X
1V
1)
#26
b10001 3
b10001 >
b10001 I
17
19
b10000 :
b10000 ?
b10000 G
0)
#27
1)
#28
0)
#29
1)
#30
0)
#31
1)
#32
0)
#33
1)
#34
0)
#35
1)
#36
0O
1Q
0)
1*
b10 (
b10 .
#37
1Q
1$
0'
0!
1#
1T
0V
1)
#38
0)
#39
0&
b11 J
b10 H
18
b0 2
b0 <
b0 @
b11 4
b10 5
b10 6
b10 ;
1)
#40
b10 3
b10 >
b10 I
b1 :
b1 ?
b1 G
0)
#41
1)
#42
0)
#43
1)
#44
0)
#45
1)
#46
1L
0Q
0)
0*
#47
0L
1"
1M
0#
0T
1Y
1)
#48
0)
#49
1M
b100 J
b11 H
b100 4
b11 5
b1 2
b1 <
b1 @
1X
0Y
1)
#50
b11 3
b11 >
b11 I
17
19
b10 :
b10 ?
b10 G
0)
#51
b101 J
b100 H
b101 4
b100 5
b10 2
b10 <
b10 @
1)
#52
0M
1N
1%
b10 3
b10 >
b10 I
17
09
b11 :
b11 ?
b11 G
0)
#53
0"
0$
1'
b110 J
b101 H
b110 4
b101 5
b11 2
b11 <
b11 @
0X
1W
1)
#54
0%
19
b101 3
b101 >
b101 I
17
b10 :
b10 ?
b10 G
0)
#55
1)
#56
0)
#57
1)
#58
0)
#59
1)
#60
0)
#61
1)
#62
0)
#63
1)
#64
0)
#65
1)
#66
0)
#67
1)
#68
0N
1Q
0)
1*
b11 +
b11 /
b111 (
b111 .
#69
1$
1Q
0'
1#
1T
0W
1)
#70
0)
#71
b1000 J
b111 H
b0 2
b0 <
b0 @
18
b10 1
b10 A
00
b11 =
b1000 4
b111 5
b111 6
b111 ;
1)
#72
b1000 3
b1000 >
b1000 I
19
b111 :
b111 ?
b111 G
0)
#73
1)
#74
0)
#75
1)
#76
0)
#77
1)
#78
1L
0Q
0)
0*
#79
0L
1"
1M
0#
0T
1Y
1)
#80
0)
#81
1M
b1001 J
b1000 H
b1001 4
b1000 5
b1 2
b1 <
b1 @
1X
0Y
1)
#82
b1001 3
b1001 >
b1001 I
17
19
b1000 :
b1000 ?
b1000 G
0)
#83
0M
1O
1&
b1010 J
b1001 H
08
0B
b1010 4
b1001 5
b10 2
b10 <
b10 @
1)
#84
0O
1N
1%
b110 3
b110 >
b110 I
17
09
b1001 :
b1001 ?
b1001 G
0)
#85
0"
0$
1'
b1011 J
b1010 H
1B
b1011 4
b1010 5
b11 2
b11 <
b11 @
0X
1W
1)
#86
0%
19
b111 3
b111 >
b111 I
17
b110 :
b110 ?
b110 G
0)
#87
1)
#88
0)
#89
1)
#90
0)
#91
1)
#92
0)
#93
1)
#94
0)
#95
1)
#96
0)
#97
1)
#98
0)
#99
1)
#100
0)
#101
1)
#102
0)
#103
1)
#104
0)
#105
1)
#106
0)
#107
1)
#108
0)
